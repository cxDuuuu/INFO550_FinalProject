# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = sex, fill = target)) +
geom_bar(aes(y = ..prop.., position = "dodge") +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
xlab("Gender") +
ylab("Percentage (%)") +
scale_fill_discrete(name = "Heart Disease Condition") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = sex, fill = target)) +
geom_bar(aes(y = ..prop.., position = "dodge")) +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
xlab("Gender") +
ylab("Percentage (%)") +
scale_fill_discrete(name = "Heart Disease Condition") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
library(dplyr)
library(gtsummary)
library(ggplot2)
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = sex, fill = target)) +
geom_bar(aes(y = ..prop..), position = "dodge") +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
xlab("Gender") +
ylab("Percentage (%)") +
scale_fill_discrete(name = "Heart Disease Condition") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = sex, group = sex)) +
geom_bar(aes(y = ..prop..), position = "dodge") +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
xlab("Gender") +
ylab("Percentage (%)") +
scale_fill_discrete(name = "Heart Disease Condition") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = sex, group = target)) +
geom_bar(aes(y = ..prop..), position = "dodge") +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
xlab("Gender") +
ylab("Percentage (%)") +
scale_fill_discrete(name = "Heart Disease Condition") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = sex, group = target)) +
geom_bar(aes(y = ..prop..fill = factor(..x..)), stat="count") +
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = sex, group = target)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
xlab("Gender") +
ylab("Percentage (%)") +
scale_fill_discrete(name = "Heart Disease Condition") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = sex, group = target)) +
geom_bar(aes(y = ..prop.., fill = factor(target)), stat="count") +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
xlab("Gender") +
ylab("Percentage (%)") +
scale_fill_discrete(name = "Heart Disease Condition") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = target, group = target)) +
geom_bar(aes(y = ..prop.., fill = factor(sex)), stat="count") +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
xlab("Gender") +
ylab("Percentage (%)") +
scale_fill_discrete(name = "Heart Disease Condition") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = target, group = sex)) +
geom_bar(aes(y = ..prop.., fill = factor(sex)), stat="count") +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
xlab("Gender") +
ylab("Percentage (%)") +
scale_fill_discrete(name = "Heart Disease Condition") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = target, group=sex)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
facet_grid(~sex) +
ylab("Percentage (%)") +
scale_fill_discrete(name = "Heart Disease Condition") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = target, group=sex)) +
geom_bar(aes(y = ..prop..*100, fill = factor(..x..)), stat="count") +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
facet_grid(~sex) +
ylab("Percentage (%)") +
scale_fill_discrete(name = "Heart Disease Condition") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = target, group=sex)) +
geom_bar(aes(y = ..prop..*100, fill = factor(..x..)), stat="count") +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
facet_grid(~sex) +
ylab("Percentage (%)") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = target, group=sex)) +
geom_bar(aes(y = ..prop..*100, fill = factor(..x..)), stat="count", show.legend = FALSE) +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
facet_grid(~sex) +
xlab("Heart Disease Condition") +
ylab("Percentage (%)") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
heart$target <- factor(heart$target, levels = c("Diseased", "Normal"))
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = target, group=sex)) +
geom_bar(aes(y = ..prop..*100, fill = factor(..x..)), stat="count", show.legend = FALSE) +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
facet_grid(~sex) +
xlab("Heart Disease Condition") +
ylab("Percentage (%)") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
# Distribution of age among Heart Disease groups
ggplot(data = heart, aes(x = age, fill = target, group = target)) +
geom_density(adjust=1.5, alpha=.4) +
ggtitle("Figure.2 Distribution of Age among Heart Disease groups") +
xlab("Age") +
ylab("Percentage (%)") +
scale_fill_discrete(name = "Heart Disease Condition") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
x <- heart |> tbl_summary(by = target) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**Heart Disease Condition**") |>
add_p() |>
bold_p() |>
modify_caption("**Comparison of Risk factors between Heart Disease Groups**")
x
View(heart)
corrplot::corrplot(corr = cor(heart[, -1]))
heart[, -1]
cor(heart[, -1])
corrplot::corrplot(corr = cor(heart[, c("age", "cholesterol", "bp", "hr")]))
corr = cor(heart[, c("age", "cholesterol", "bp", "hr")])
cor(heart[, c("age", "cholesterol", "bp", "hr")])
# rename the column and row
colnames(correla)
# build the correlation matrix
correla <- cor(heart[, c("age", "cholesterol", "bp", "hr")])
# rename the column and row
colnames(correla)
# build the correlation matrix
correla <- cor(heart[, c("age", "cholesterol", "bp", "hr")])
# rename the column and row
colnames(correla) <- c("Age (year)", "Serum Cholesterol Level (mg/dl)", "Resting Blood Pressure (mmHg)", "Max Heart Rate")
rownames(correla) <- c("Age (year)", "Serum Cholesterol Level (mg/dl)", "Resting Blood Pressure (mmHg)", "Max Heart Rate")
corrplot::corrplot(corr = correla)
# build the correlation matrix
correla <- cor(heart[, c("age", "cholesterol", "bp", "hr")])
# rename the column and row
colnames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
rownames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
corrplot::corrplot(corr = correla)
# create correlation plot
corrplot::corrplot(corr = correla, method = 'number')
# build the correlation matrix
correla <- cor(heart[, c("age", "cholesterol", "bp", "hr")])
# rename the column and row
colnames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
rownames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
# create correlation plot
corrplot::corrplot(corr = correla)
# build the regression table
tbl_regression(mod) |>
add_global_p()
library(gtsummary)
# Build logistic regression
mod <- glm(target ~ age + sex + cholesterol + bs + bp + hr + cp + angina + ecg, data = heart)
# Build logistic regression
mod <- glm(as.numeric(target)-1 ~ age + sex + cholesterol + bs + bp + hr + cp + angina + ecg, data = heart)
# build the regression table
tbl_regression(mod) |>
add_global_p()
library(gtsummary)
# standardized the continuous variabels
heart$age1 <- scale(heart$age)
heart$cholesterol1 <- scale(heart$cholesterol)
heart$bp1 <- scale(heart$bp)
heart$hr1 <- scale(heart$hr)
# Build logistic regression
mod <- glm(as.numeric(target)-1 ~ age1 + sex + cholesterol1 + bs + bp1 + hr1 + cp + angina + ecg, data = heart)
# build the regression table
tbl_regression(mod) |>
add_global_p() |>
bold_p() |>
modify_caption("**Table.2 Logistic Regression Result**")
library(labelled)
library(gtsummary)
library(labelled)
# standardized the continuous variabels
heart$age1 <- scale(heart$age)
heart$cholesterol1 <- scale(heart$cholesterol)
heart$bp1 <- scale(heart$bp)
heart$hr1 <- scale(heart$hr)
var_label(heart) <- list(age1 = "Standardized Age (year)",
cholesterol1 = "Standardized Serum Cholesterol Level (mg/dl)",
bp1 = "Standardized Resting Blood Pressure (mmHg)",
hr1 = "Standardized Max Heart Rate")
# Build logistic regression
mod <- glm(as.numeric(target)-1 ~ age1 + sex + cholesterol1 + bs + bp1 + hr1 + cp + angina + ecg, data = heart)
# build the regression table
tbl_regression(mod) |>
add_global_p() |>
bold_p() |>
modify_caption("**Table.2 Logistic Regression Result**")
# build the correlation matrix
correla <- cor(heart[, c("age", "cholesterol", "bp", "hr")])
# rename the column and row
colnames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
rownames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
# create correlation plot
corrplot::corrplot(corr = correla, title = "Figure 3. Heatmap for Correlation Matrix")
# create correlation plot
corrplot::corrplot(corr = correla, title = "Figure 3. Heatmap for Correlation Matrix", tl.col = "black")
# create correlation plot
corrplot::corrplot(corr = correla, title = "Figure 3. Heatmap for Correlation Matrix", tl.col = "black", tl.pos = ld)
# create correlation plot
corrplot::corrplot(corr = correla, title = "Figure 3. Heatmap for Correlation Matrix", tl.col = "black", tl.pos = "ld")
# create correlation plot
corrplot::corrplot(corr = correla, title = "Figure 3. Heatmap for Correlation Matrix", tl.col = "black", tl.pos = "ld", type = "lower")
# create correlation plot
corrplot::corrplot(corr = correla, title = "\n\nFigure 3. Heatmap for Correlation Matrix", tl.col = "black", tl.srt = 30, bg = "White", type = "full"))
# create correlation plot
corrplot::corrplot(corr = correla, title = "\n\nFigure 3. Heatmap for Correlation Matrix", tl.col = "black", tl.srt = 30, bg = "White", type = "full")
# create correlation plot
corrplot::corrplot(corr = correla, title = "\nFigure 3. Heatmap for Correlation Matrix", tl.col = "black", tl.srt = 30, bg = "White", type = "full")
# create correlation plot
corrplot::corrplot(corr = correla, title = "\nFigure 3. Heatmap for Correlation Matrix", tl.col = "black", type = "lower")
# create correlation plot
corrplot::corrplot(corr = correla, title = "\n\nFigure 3. Heatmap for Correlation Matrix", tl.col = "black", type = "lower")
# create correlation plot
corrplot::corrplot(corr = correla, title = "\n\nFigure 3. Heatmap for Correlation Matrix", tl.col = "black",
type = "lower", tl.srt = 90)
# create correlation plot
corrplot::corrplot(corr = correla, title = "\n\nFigure 3. Heatmap for Correlation Matrix", tl.col = "black",
type = "lower", tl.srt = 0)
# create correlation plot
corrplot::corrplot(corr = correla, title = "\n\nFigure 3. Heatmap for Correlation Matrix", tl.col = "black",
type = "lower", tl.srt = 30)
# create correlation plot
corrplot::corrplot(corr = correla, title = "\nFigure 3. Heatmap for Correlation Matrix", tl.col = "black",
type = "lower", tl.srt = 30)
# create correlation plot
a <- corrplot::corrplot(corr = correla, title = "\nFigure 3. Heatmap for Correlation Matrix", tl.col = "black",
type = "lower", tl.srt = 30)
# create correlation plot
a <- corrplot::corrplot(corr = correla, title = "\nFigure 3. Heatmap for Correlation Matrix", tl.col = "black",
type = "lower", tl.srt = 30)
a
# build the correlation matrix
correla <- cor(heart[, c("age", "cholesterol", "bp", "hr")])
# rename the column and row
colnames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
rownames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
# create correlation plot
png(height=1800, width=1800, file="/Users/duchenxi/Documents/Emory/2022 Fall/INFO 550/Project/test.png", type = "cairo")
corrplot::corrplot(corr = correla, title = "\nFigure 3. Heatmap for Correlation Matrix", tl.col = "black",
type = "lower", tl.srt = 30)
dev.off()
melted_corr_mat <- reshape2::melt(correla)
ggplot(data = melted_corr_mat, aes(x=Var1, y=Var2,
fill=value)) +
geom_tile()
# build the correlation matrix
correla <- cor(heart[, c("age", "cholesterol", "bp", "hr")])
# rename the column and row
colnames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
rownames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
melted_corr_mat <- reshape2::melt(correla)
# create correlation plot
ggplot(data = melted_corr_mat, aes(x=Var1, y=Var2, fill=value)) +
ggtitle("Figure.2 Distribution of Age") +
xlab("Age") +
ylab("Percentage (%)") +
scale_fill_continuous(name = "Correlation")
geom_tile()
# create correlation plot
ggplot(data = melted_corr_mat, aes(x=Var1, y=Var2, fill=value)) +
xlab("Age") +
ylab("Percentage (%)") +
scale_fill_continuous(name = "Correlation")
+
scale_fill_continuous(name = "Correlation") +
# create correlation plot
ggplot(data = melted_corr_mat, aes(x=Var1, y=Var2, fill=value)) +
ggtitle("Figure.2 Distribution of Age") +
xlab("Age") +
ylab("Percentage (%)")
# create correlation plot
ggplot(data = melted_corr_mat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
ggtitle("Figure.2 Distribution of Age") +
xlab("Age") +
ylab("Percentage (%)")
# create correlation plot
ggplot(data = melted_corr_mat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
ggtitle("Figure.2 Distribution of Age") +
xlab("") +
ylab("")
# build the correlation matrix
correla <- cor(heart[, c("age", "cholesterol", "bp", "hr")])
# rename the column and row
colnames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
rownames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
melted_corr_mat <- reshape2::melt(correla)
# create correlation plot
ggplot(data = melted_corr_mat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
ggtitle("Figure.3 Heatmap for Correlation Matrix") +
xlab("") +
ylab("")
knitr::opts_chunk$set(echo = TRUE)
# load in required library
library(tidyr)
library(dplyr)
library(gtsummary)
# load in edited dataset
engage <- readRDS("/Users/duchenxi/Library/CloudStorage/OneDrive-EmoryUniversity/Emory/2022 fall/INFO 550 project/data/course_engagement_edit.rds")
# group by topic and generate needed variables
engage_topic <- engage %>%
group_by(topic) %>%
add_count(topic) %>%
mutate(total_unique_view = sum(unique_viewers)) %>%
mutate(min = sum(total_min)) %>%
slice_tail(n=1) %>%
arrange(week)
# fit a linear regression
reg_topic <- lm(total_unique_view ~ min + n + min*n, data = engage_topic)
tbl_regression(reg_topic) |>
add_global_p() |>
bold_p() |>
modify_caption("**Linear regression model grouped by topic**")
library(labelled)
# group by topic and generate needed variables
engage_topic <- engage %>%
group_by(topic) %>%
add_count(topic) %>%
mutate(total_unique_view = sum(unique_viewers)) %>%
mutate(min = sum(total_min)) %>%
slice_tail(n=1) %>%
arrange(week)
# label
var_label(heart) <- list(min = "Total video length (minutes)",
n = "Number of videos")
# label
var_label(engage_topic) <- list(min = "Total video length (minutes)",
n = "Number of videos")
# fit a linear regression
reg_topic <- lm(total_unique_view ~ min + n + min*n, data = engage_topic)
tbl_regression(reg_topic) |>
add_global_p() |>
bold_p() |>
modify_caption("**Linear regression model grouped by topic**")
heart |> tbl_summary()
# Load in dataset
heart <- read.csv("/Users/duchenxi/Documents/Emory/2022 Fall/INFO 550/Project/Heart_disease.csv")
# Load in dataset
heart <- read.csv("/Users/duchenxi/Documents/Emory/2022 Fall/INFO 550/Project/Heart_disease.csv")
engage |> tbl_summary()
View(engage)
engage$week <- factor(engage$week, levels = c(1,2,3,4,5,6),
labels = c("Week 1", "Week 2", "Week 3", "Week 4", "Week 5", "Week 6"))
engage$topic <- factor(engage$topic)
engage$reupload <- factor(engage$reupload, levels = c(1,0), labels = c("Yes", "No"))
var_label(engage) <- list(week = "Week",
topic = "Video topics",
views = "Total number of views of video",
unique_viewers= "total number of unique viewers of video",
total_min = "Length of video (minutes)",
reupload = "Was the video reuploaded")
engage |> tbl_summary()
library(dplyr)
engage |> select(week, topic, views, unique_viewers, total_min, reupload) |> tbl_summary()
table1 <- readRDS("/Users/duchenxi/Documents/Emory/2022 Fall/INFO 550/info550.engage.group2/output/table1.rds")
View(table1)
table1
library(dplyr)
library(gtsummary)
# univariate analysis
heart |> tbl_summary(by = target) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**Heart Disease Condition**") |>
add_p() |>
bold_p() |>
modify_caption("**Comparison of Risk factors between Heart Disease Groups**")
# Load in dataset
heart <- read.csv("/Users/duchenxi/Documents/Emory/2022 Fall/INFO 550/Project/Heart_disease.csv")
# Load in dataset
heart <- read.csv("/Users/duchenxi/Documents/Emory/2022 Fall/INFO 550/Project/data/Heart_disease.csv")
library(labelled)
heart$target <- factor(heart$target, levels = c("Diseased", "Normal"))
heart$sex <- factor(heart$sex, levels = c("Female", "Male"))
heart$bs <- factor(heart$bs, levels = c(0, 1), labels = c("No", "Yes"))
heart$cp <- factor(heart$cp, levels = c(1, 2, 3, 4),
labels = c("typical angina", "atypical angina", "non-anginal pain", "asymptomatic"))
heart$angina <- factor(heart$angina, levels = c(0, 1), labels = c("No", "Yes"))
heart$ecg <- factor(heart$ecg, levels = c(0, 1, 2),
labels = c("normal", "ST-T wave abnormality", "left ventricular hypertrophy"))
var_label(heart) <- list(target = "Heart Disease Condition",
age = "Age (year)",
sex = "Gender",
cholesterol = "Serum Cholesterol Level (mg/dl)",
bs = "Fasting Blood Sugar Level > 120 mg/dl",
bp = "Resting Blood Pressure (mmHg)",
hr = "Max Heart Rate",
cp = "Chest Pain Type",
angina = "Exercise Angina",
ecg = "Resting Electrocardiogram")
library(ggplot2)
# Distribution of Heart Disease among Gender groups
ggplot(data = heart, aes(x = target, group=sex)) +
geom_bar(aes(y = ..prop..*100, fill = factor(..x..)), stat="count", show.legend = FALSE) +
ggtitle("Figure.1 Distribution of Heart Disease among Gender groups") +
facet_grid(~sex) +
xlab("Heart Disease Condition") +
ylab("Percentage (%)") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
library(ggplot2)
# Distribution of age among Heart Disease groups
ggplot(data = heart, aes(x = age, fill = target, group = target)) +
geom_density(adjust=1.5, alpha=.4) +
ggtitle("Figure.2 Distribution of Age") +
xlab("Age") +
ylab("Percentage (%)") +
scale_fill_discrete(name = "Heart Disease Condition") +
theme(axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(hjust=0.5, size = 15))
library(dplyr)
library(gtsummary)
# univariate analysis
heart |> tbl_summary(by = target) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**Heart Disease Condition**") |>
add_p() |>
bold_p() |>
modify_caption("**Comparison of Risk factors between Heart Disease Groups**")
# build the correlation matrix
correla <- cor(heart[, c("age", "cholesterol", "bp", "hr")])
# rename the column and row
colnames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
rownames(correla) <- c("Age", "Cholesterol", "Blood Pressure", "Heart Rate")
melted_corr_mat <- reshape2::melt(correla)
# create correlation plot
ggplot(data = melted_corr_mat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
ggtitle("Figure.3 Heatmap for Correlation Matrix") +
xlab("") +
ylab("")
library(gtsummary)
library(labelled)
# standardized the continuous variabels
heart$age1 <- scale(heart$age)
heart$cholesterol1 <- scale(heart$cholesterol)
heart$bp1 <- scale(heart$bp)
heart$hr1 <- scale(heart$hr)
var_label(heart) <- list(age1 = "Standardized Age (year)",
cholesterol1 = "Standardized Serum Cholesterol Level (mg/dl)",
bp1 = "Standardized Resting Blood Pressure (mmHg)",
hr1 = "Standardized Max Heart Rate")
# Build logistic regression
mod <- glm(as.numeric(target)-1 ~ age1 + sex + cholesterol1 + bs + bp1 + hr1 + cp + angina + ecg, data = heart)
# build the regression table
tbl_regression(mod) |>
add_global_p() |>
bold_p() |>
modify_caption("**Logistic Regression Result**")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics( here::here("output/distplot.png") )
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics( here::here("output/corplot.png") )
readRDS(file = here::here("output/univar.rds"))
readRDS(file = here::here("output/univar.rds"))
readRDS(file = here::here("output/logit_reg.rds"))
